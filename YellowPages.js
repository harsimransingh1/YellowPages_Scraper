const axios = require('axios').default;
const cheerio = require('cheerio');
const xlsx = require('xlsx');
let domElem;

let counter = 0;
let percentage;
let valid = 0;
let invalid = 0;

const numbers = [
    '5192819675',
'7054650895',
'5063539000',
'8198522839',
'2896003610',
'7057200324',
'6473330233',
'6472064740',
'4508803445',
'9024918130',
'7058762037',
'2262301585',
'5064588591',
'6132365315',
'4032678434',
'9052617077',
'4035860108',
'8198958827',
'2044814484',
'6043567133',
'6045187738',
'4163943405',
'4162706132',
'9022376353',
'4162556302',
'4183802820',
'7054922810',
'9053549176',
'4166881481',
'4188087061',
'2048697044',
'5878994485',
'4037324219',
'5142991959',
'9025312499',
'5064440505',
'6477773161',
'6132239836',
'5194651501',
'5196882211',
'5143442114',
'7095272158',
'5819912893',
'4166257780',
'4168815645',
'4188300697',
'9058021189',
'5062320613',
'8192790233',
'2046126039',
'2045005608',
'2505747619',
'5147106677',
'6048327768',
'5149087771',
'4037301620',
'7808089676',
'8676454699',
'2262020716',
'7782401543',
'4035542909',
'5142983905',
'7096876454',
'4034440588',
'4036172741',
'8198180568',
'7097468195',
'9028175301',
'7809941699',
'5148863398',
'9059220167',
'5065458431',
'4187325252',
'9053174501',
'5145154294',
'2509614765',
'8194711652',
'4038709792',
'7092575264',
'7097403631',
'5144286872',
'7802152501',
'9057528371',
'4182649554',
'7807024334',
'4164577162',
'4033829195',
'5198380117',
'4036803920',
'7097867476',
'4168712714',
'8194341577',
'9057600362',
'4184756103',
'4038030077',
'7808910404',
'8676202626',
'4167169192',
'5142919263',
'4166050686',
'5146217038',
'2503176728',
'6475742989',
'5145688386',
'8197630405',
'4508984115',
'6047291297',
'2049996904',
'6474275309',
'4169639615',
'4167986268',
'4182218466',
'5147183562',
'2078651433',
'9057198838',
'9028651293',
'9026372010',
'7052623138',
'2266467393',
'8196649584',
'5145615788',
'7095719642',
'6136393743',
'6473304171',
'9056631427',
'4036145747',
'8196965345',
'6479894217',
'6138084124',
'4168477256',
'2266360045',
'2043186208',
'9028300191',
'7802961378',
'7808358425',
'9028834910',
'2508839002',
'6133120456',
'9059889114',
'5147816310',
'5064660814',
'4165530440',
'9024501269',
'9025653494',
'5193741571',
'9056515525',
'6047206758',
'7802398772',
'7804348743',
'4184736342',
'6475055525',
'5142245373',
'7057195711',
'9054317410',
'5144313303',
'7808978861',
'4185500838',
'9025978751',
'6138700447',
'2264994725',
'7788826357',
'5142900116',
'7056983489',
'5879787359',
'9024890894',
'5145771239',
'7095289100',
'6474029501',
'7805984644',
'4166767007',
'4162503811',
'7097640273',
'5068505756',
'7803850275',
'5062277077',
'9022244223',
'4033084121',
'4163952788',
'9055017917',
'2263641115',
'4508181350',
'4168980696',
'4164463303',
'5195217769',
'4169904558',
'6045026382',
'4037787702',
'6043365220',
'4165619418',
'2504153287',
'9028302405',
'7723985100',
'6474499464',
'8677774411',
'9055423835',
'4389948062',
'4188899233',
'2107613552',
'6474996527',
'2049452531',
'5066509643',
'9022292168',
'6476925034',
'5147724911',
'4187805263',
'4169895041',
'6138057368',
'9056177171',
'4189480538',
'5145945129',
'9024731078',
'7058223899',
'2046542255',
'6047285184',
'4318002182',
'4166375540',
'2049385319',
'9054942099',
'4165677663',
'6135368297',
'8195873184',
'8199683838',
'7785814445',
'9023224598',
'4038942625',
'7808519847',
'9024247422',
'9024958405',
'5066749617',
'6042324378',
'9024935169',
'7806433642',
'9059242635',
'8193339200',
'4168020051',
'5819884889',
'4504207359',
'9053020803',
'4167173283',
'7097375096',
'8193200140',
'6073303200',
'9059299799',
'4167869570',
'4187553480',
'9057812645',
'6136200949',
'5149778264',
'7782882149',
'8194709717',
'5148850173',
'2044718702',
'9024970436',
'9055151435',
'2507180472',
'2079455671',
'9175741633',
'6132291696',
'8194205446',
'4185962085',
'4168590719',
'5195313937',
'7056478237',
'3065171414',
'4186313044',
'7808717918',
'7059181438',
'7097634003',
'4036502595',
'4168710022',
'6479851089',
'4038812853',
'4167882142',
'5142679771',
'5874155039',
'6049902488',
'7059101334',
'6135368465',
'6047739945',
'4167278863',
'6477387224',
'9057382761',
'5149959651',
'6479824791',
'7054246924',
'7808125967',
'6474617552',
'5147991808',
'9059038880',
'8199750054',
'9024564924',
'6138800647',
'8676891848',
'6135517424',
'4169534301',
'5193504941',
'9054541040',
'4188207784',
'6133456877',
'5142915775',
'4039715093',
'9028753857',
'5145614260',
'9059847376',
'9056991440',
'4508231426',
'4166774489',
'7097220934',
'8194420735',
'5194512256',
'2897258810',
'6044324141',
'9028306089',
'6045571463',
'9052933098',
'6472209307',
'9027986245',
'2893241644',
'9054977745',
'4186686681',
'6473938453',
'4168961231',
'4169221001',
'4035106292',
'6472292335',
'6137568066',
'4508037951',
'6479989944',
'6136916641',
'4165663357',
'4185728551',
'5149327296',
'5148155109',
'7786781769',
'7782882566',
'5145760182',
'5068703712',
'9024668522',
'4502234480',
'7809104033',
'4162589866',
'7809139984',
'4184342279',
'9055501217',
'5142981587',
'4189309475',
'7094273228',
'4189316087',
'9059719886',
'9054557429',
'2364202679',
'4508229512',
'5149492175',
'5147017900',
'9024843013',
'2047871534',
'6472040912',
'4166702368',
'4508985566',
'4189535621',
'5148170707',
'5145020129',
'7097728565',
'4188032792',
'6474903133',
'6046147970',
'4506682509',
'5064730625',
'7097522346',
'5879206972',
'4185909118',
'7802190785',
'7788827727',
'2899750535',
'5068436306',
'8192387078',
'4037329209',
'6046910674',
'4189656984',
'9024712846',
'4504059322',
'8192962746',
'6137911324',
'7803718910',
'7787153338',
'5878970077',
'4035046235',
'6478212443',
'4036906195',
'4377779147',
'7807770999',
'7802218004',
'5142290995',
'4188066776',
'5148383071',
'5876860686',
'3068505586',
'5146034250',
'4162765064',
'5813190550',
'9056515389',
'5198970204',
'6043091666',
'5144445820',
'6472066638',
'2048985746',
'2502154458',
'4168252355',
'8196407886',
'9024689105',
'6133129389',
'4162192746',
'2506397268',
'9054077016',
'8193604588',
'7086722300',
'6475516331',
'2893889059',
'4507788783',
'6048301477',
'4165461721',
'6102747075',
'5146172244',
'5066509739',
'9025353900',
'7789083317',
'4378863922',
'4188095984',
'2503193208',
'5148147473',
'5198868855',
'9022122742',
'8076311939',
'4186343000',
'9056144885',
'6134331529',
'8193791423',
'5148315874',
'6476314369',
'6138367318',
'7056980673',
'4183130696',
'4165684786',
'4388364554',
'7802427077',
'5146553377',
'5195895568',
'2049997313',
'5069928807',
'3066942040',
'8678739535',
'4185386000',
'6137566267',
'7052411343',
'5879550404',
'5142099467',
'4032805216',
'7782127754',
'5148381580',
'5142409557',
'4503771478',
'4506015720',
'6049307742',
'4038913333',
'5063723303',
'4162185650',
'6047248447',
'2045864357',
'5193211253',
'9023082562',
'5146199015',
'5872574036',
'2502627304',
'5879852752',
'2042980123',
'5142131861',
'4165612827',
'5873381751',
'8197523232',
'2049602002',
'5149417683',
'4189636333',
'4165681978',
'7055237007',
'4184642100',
'4162466715',
'4167007343',
'5148210660',
'4039704916',
'5149141610',
'6475672950',
'6473516220',
'5065761787',
'5143588358',
'6139477031',
'4383240351',
'9027583908',
'3068506776',
'4032617245',
'8194420036',
'5148302013',
'3068251685',
'4506743337',
'2264484594',
'3068819042',
'7057166483',
'9023188056',
'5065247134',
'8596285327',
'5143869801',
'5148826911',
'6136399772',
'6476753456',
'4168184610',
'4168758705',
'6045575140',
'5197651271',
'4032208501',
'4388299965',
'4508033843',
'7099455624',
'9025950396',
'7787341704',
'5147430462',
'5062353342',
'5147039364',
'3057952360',
'2048176986',
'8196090746',
'8197974698',
'4187176848',
'7864538084',
'5066486694',
'7097268003',
'2502794911',
'8196614930',
'2047974207',
'4503732555',
'6475573720',
'9026230651',
'5142223083',
'4033501900',
'5192651293',
'9029403335',
'7784230055',
'9028090792',
'5146292007',
'4164668803',
'6044174702',
'4168203356',
'4165687798',
'9055260131',
'7809531130',
'4508080927',
'4188832666',
'4162745179',
'9055628035',
'5198301868',
'6133054646',
'5062326420',
'4032024458',
'9058725334',
'7052821560',
'9059554173',
'4506883591',
'7053101717',
'6472924176',
'8199231919',
'6472739043',
'4035013333',
'9058370394',
'8677777338',
'2506196287',
'9028426453',
'8196687184',
'5149794005',
'7055071115',
'7274613222',
'4169911774',
'2266885676',
'7094973623',
'7809353739',
'7802215285',
'7097773181',
'6508776780',
'5195214264',
'8195982697',
'7785887868',
'8193521259',
'5148779290',
'2505854013',
'4164509350',
'6044443799',
'9059815077',
'9052770524',
'8195702996',
'7808752096',
'4502718596',
'4313374006',
'8079280958',
'5194195584',
'7095767926',
'7095714556',
'9026616359',
'5877031010',
'6138295960',
'3056029998',
'5145911332',
'4506340021',
'4032142240',
'2049858105',
'6138783561',
'4037780732',
'4038446640',
'6137378135',
'9058617513',
'4184491442',
'8673343915',
'4188086528',
'4162076955',
'5068724708',
'5148852269',
'5149403630',
'8196965591',
'5063245357',
'4033715376',
'5812220204',
'7803819131',
'5799000779',
'7807188058',
'5146688985',
'6474907904',
'4509636414',
'4165698288',
'4167869809',
'4387649918',
'4504298377',
'6047008250',
'5063445432',
'8676896217',
'4033040513',
'4163177960',
'9028189874',
'7052411941',
'6047807085',
'5149416244',
'6472418468',
'5146598289',
'7053441236',
'5148827978',
'4377743277',
'4167232227',
'5149446131',
'4163016460',
'7052792499',
'4187143495',
'6132030830',
'8196092219',
'3433412832',
'5148388784',
'6136052224',
'2049417978',
'4183652266',
'7805184756',
'5148003030',
'2897251888',
'6047207377',
'6477162677',
'7789973276',
'4168869306',
'2506398459',
'3065368173',
'5147057828',
'7096436704',
'6048560489',
'5148686476',
'7808586017',
'2899680782',
'6477387396',
'2048142185',
'7056656167',
'9022180496',
'5199536225',
'4387934512',
'4373442190',
'2262365146',
'9025781808',
'5149280027',
'7808721217',
'7782384892',
'6132292149',
'7787887492',
'4508590003',
'2507022713',
'4166391102',
'9024492978',
'8199939001',
'4189575302',
'5148084090',
'6043077016',
'4189448504',
'8196901770',
'7809188478',
'4187281632',
'4507713327',
'5142327020',
'6043685453',
'7167548226',
'4168061460',
'5062045074',
'5873163886',
'9024993815',
'5143249616',
'5193013592',
'4033936696',
'5879306915',
'4037780876',
'7095794730',
'4039296712',
'7095328000',
'4168176764',
'9058186793',
'9052663063',
'4505120172',
'7055266264',
'5149429916',
'6479321130',
'7096600736',
'7095980232',
'5149414925',
'7809057562',
'2896865577',
'7096858988',
'7804561466',
'6138165996',
'5068584150',
'5143915151',
'5146613394',
'9052597185',
'4185503005',
'5196402039',
'5147062679',
'4032918357',
'5068663332',
'5149622114',
'4163003241',
'9022242484',
'6138891716',
'6138317746',
'7789389006',
'6133340820',
'4188828105',
'9057132190',
'7097777564',
'5068889775',
'6135625462',
'5195218947',
'6479660774',
'4166447719',
'6047814601',
'6473418800',
'6133129469',
'7806893650',
'2507935330',
'5143554135',
'8077077260',
'6137403286',
'5145943847',
'6478846258',
'4165695196',
'7809033941',
'5068523939',
'8193332560',
'6042560050',
'7788834513',
'9416980918',
'9055218889',
'7806997697',
'2043714848',
'6135510247',
'5148160433',
'5195886280',
'9024368462',
'7053338325',
'7804464151',
'7807019277',
'9028808191',
'7055237256',
'4163594660',
'8197193289',
'7808718049',
'9024744755',
'5873902673',
'7098913225',
'2049895329',
'5142463131',
'9292704141',
'6046155160',
'9056404032',
'5193339441',
'9027498771',
'7053056524',
'2505714067',
'4168589006',
'2892066435',
'4166182114',
'4168038415',
'6479968035',
'4163150495',
'6139146272',
'6477798942',
'8193975130',
'7096853096',
'7808321233',
'8193457194',
'6472879669',
'8193333104',
'9026373900',
'9056802112',
'8198952931',
'2047744629',
'4168542478',
'5068570313',
'7788996959',
'4034870770',
'4032991827',
'6476551651',
'4377792996',
'4168793879',
'6139665705',
'3065024296',
'5192671888',
'6049134563',
'5063443419',
'4508815771',
'4032874990',
'7097654793',
'2267730435',
'8196070707',
'4165586287',
'4033995100',
'8194991001',
'2267829685',
'5146362042',
'2896771995',
'6478786328',
'7187606363',
'4039986620',
'4506683802',
'5796357575',
'5062323635',
'6046008489',
'7058692035',
'4383995932',
'5196222343',
'4034856845',
'7059307654',
'4389206493',
'4163898569',
'9028300274',
'4168973339',
'7806037667',
'6136619000',
'9028648205',
'6047281578',
'6479134667',
'4188028224',
'4185584008',
'5145005125',
'7097773133',
'6136872608',
'7058689979',
'6045064900',
'4037363311',
'7789844246',
'4187258320',
'6472901508',
'5144755393',
'7809283171',
'5147723934',
'4167269093',
'5149916824',
'7097377765',
'2043596570',
'7057495538',
'4164868388',
'5199530217',
'7059880731',
'9052591170',
'6136792020',
'5063374838',
'5148315713',
'4168925047',
'5199454728',
'9056992694',
'4168254912',
'8019737499',
'9026209387',
'5148060559',
'2013994258',
'7787382117',
'5146513810',
'4385223077',
'8678735020',
'4163196777',
'4033182354',
'5066490793',
'4163984341',
'4167043424',
'2267516388',
'2506398151',
'4035426290',
'6048309076',
'5148122051',
'6045912609',
'7802961917',
'8194306389',
'9029407533',
'2265065499',
'4185594741',
'5192153335',
'5196498476',
'5148128904',
'2899560452',
'6476331568',
'5046389179',
'6132524689',
'4169515379',
'5148773266',
'6043629540',
'7803066398',
'6477632804',
'5873163589',
'8194465656',
'5149030773',
'5145869770',
'8676683261',
'5068759084',
'8198747487',
'4505224000',
'5204217000',
'5147812071',
'8676890614',
'8196273579',
'4033089936',
'9052832376',
'4163928655',
'7092795485',
'9053256502',
'4315885226',
'6472896676',
'4189863567',
'6048254550',
'9027464075',
'5145435483',
'2508891778',
'6476430908',
'5145858069',
'5148171402',
'4188082121',
'2507936873',
'8194282061',
'5197495954',
'4038198919',
'6044253110',
'5067551389',
'4169952082',
'8198609158',
'4039036362',
'8673926368',
'4168581080',
'4163934871',
'7803854934',
'7097693127',
'8198234567',
'2503314999',
'8195926769',
'4185427068',
'9028902440',
'4313370499',
'6136142277',
'6475232848',
'5146061310',
'6472167520',
'8198296104',
'4183895910',
'7099387353',
'6479541686',
'4168447708',
'6479225001',
'9024663483',
'5192404513',
'4168087237',
'7096371394',
'5192271777',
'4188085613',
'5794205525',
'9024240534',
'5149938480',
'9023662509',
'5142850793',
'5067373080',
'9055547768',
'4167922528',
'9054414288',
'5148941663',
'7802141178',
'5063219234',
'2502619276',
'6135180194',
'4372382038',
'5197777826',
'4384946166',
'5147946497',
'4188146962',
'4036800752',
'8198952053',
'6475305584',
'4166401104',
'6138224444',
'4169905069',
'4169185555',
'6139133029',
'9023685508',
'7802154130',
'8673926919',
'7057173974',
'4506992203',
'5877548737',
'4169950379',
'5149779957',
'5794881859',
'4164179094',
'5192541000',
'6473507991',
'5875825605',
'9055975772',
'7785528936',
'4185909009',
'6043811888',
'4165654978',
'4165265602',
'4037786924',
'6479300068',
'6477863389',
'4162181784',
'4185804000',
'4033583741',
'6048073728',
'5793681451',
'2263451333',
'2263189644',
'6474728055',
'5879863229',
'4168318887',
'5146192871',
'4188184814',
'5065472975',
'4165881221',
'5144759672',
'5819833161',
'6474846295',
'4503570688',
'9024245186',
'8195665380',
'4163575712',
'7808075955',
'4162741416',
'4168480114',
'7059439626',
'8196233881',
'7057394698',
'4508090720',
'2895009873',
'5147967982',
'9058613664',
'4384015517',
'9543264378',
'9053777730',
'9053664466',
'6472989597',
'7095526452',
'7096998659',
'6476222110',
'9023228184',
'6136959595',
'9052822113',
'5147088980',
'7788890619',
'4036132276',
'2503096107',
'5083929831',
'9024735238',
'7809532812',
'4166145950',
'8192286000',
'4169982056',
'6475040794',
'3432617657',
'2047826222',
'5197362688',
'7787341648',
'9024812468',
'6045323201',
'6138477458',
'9054946490',
'9058243349',
'4165872095',
'4182955178',
'2502637060',
'8198322865',
'6044345775',
'7053024852',
'4169105487',
'8196783628',
'5148286383',
'4162426060',
'6476973649',
'4509165712',
'6133276901',
'4185693214',
'6047800347',
'5195892165',
'5812464259',
'4167109391',
'4168912276',
'5063849662',
'8194561509',
'7805229401',
'6136627370',
'2505759063',
'5147074157',
'8195931481',
'2266360483',
'9027585175',
'4508034299',
'3066514822',
'9058504489',
'7095967343',
'5145381521',
'7808765144',
'4502324429',
'7783721049',
'7094540137',
'4188180058',
'6475744653',
'9545656611',
'4169265720',
'6048053191',
'6047288555',
'6479667834',
'4169177444',
'8676881517',
'4168031826',
'8196815911',
'5086352100',
'6043128920',
'5066474775',
'5148092788',
'9024458504',
'5064445629',
'4186804519',
'5199934053',
'4033360273',
'4388886407',
'2894896464',
'7808973309',
'2504873349',
'5147043819',
'8196895664',
'5149834460',
'5064586101',
'4506563686',
'4168092819',
'4034040005',
'5147435013',
'4039880103',
'8192721033',
'6047255253',
'2896971646',
'5877192109',
'5193575187',
'4036897110',
'6473414274',
'8074646196',
'6048334153',
'8193339301',
'9028019285',
'4384945657',
'6479681723',
'7098852008',
'9052471884',
'6136861551',
'3069867031',
'8196742111',
'8194709456',
'5193869933',
'5879205969',
'8073467848',
'7057061333',
'6048610844',
'7803066393',
'8193844020',
'2269199039',
'5192212992',
'6479771850',
'5068592655',
'2502040178',
'9564033039',
'6043083987',
'3062703036',
'4038525517',
'9026623046',
'4189100543',
'6472407520',
'7804855611',
'5142201125',
'9023046247',
'5142316051',
'4188220067',
'5142903412',
'4188181958',
'4163541695',
'9055077138',
'7057278444',
'5194905638',
'9022018753',
'2899370367',
'4509991467',
'2897202024',
'4049942552',
'5144957533',
'6328910000',
'4185638622',
'4038948319',
'4037264450',
'7057255447',
'5193591021',
'2366323656',
'2047547097',
'2507488468',
'8196900860',
'7092772796',
'7097243347',
'4167171459',
'4169943185',
'5192940000',
'9028593634',
'4182843817',
'7803770330',
'4382271425',
'5142645742',
'8196650016',
'6475312605',
'6047297787',
'9022002528',
'4188050598',
'8194421854',
'5195104442',
'9057452091',
'2505153636',
'7052745440',
'4039784449',
'4187181010',
'7802508200',
'9053309083',
'9059330490',
'4163942501',
'7052667791',
'9059793549',
'4382212841',
'2896001755',
'5142199321',
'6757499534',
'5067556958',
'6473615601',
'3067649774',
'7804227330',
'5146613923',
'4389881648',
'7096991917',
'6042545147',
'7058016100',
'7808851872',
'7806755599',
'2507930349',
'7059717057',
'5873933730',
'9025437805',
'5066487652',
'6138782386',
'7807357037',
'4388991994',
'4037776274',
'9056507871',
'5063288372',
'7803704331',
'4186228581',
'9287267220',
'5146751550',
'9024526838',
'4166883815',
'4036600421',
'7803426514',
'2262070448',
'7788588558',
'7092190183',
'4163017755',
'6132423046',
'6139930148',
'8196904168',
'5065010435',
'2507120482',
'4185540793',
'3065015454',
'2507875877',
'7806708094',
'6132131817',
'5192702107',
'4033082771',
'4163007233',
'6474087969',
'4506580844',
'5143863542',
'4036679415',
'9028772920',
'7056447706',
'9026853858',
'4163385425',
'2049988445',
'7097584810',
'5149291122',
'4167202754',
'7808850889',
'5065325149',
'7097484115',
'9059228126',
'4189993919',
'5145762646',
'4379908682',
'5145027139',
'4165613990',
'2049542671',
'6139478097',
'7805187137',
'2366321666',
'2892080449',
'4187819138',
'5148488060',
'7058283255',
'7097001150',
'4033514740',
'7053637206',
'3065811386',
'6474060747',
'2368813448',
'9059873646',
'2507931414',
'7807359754',
'5148054593',
'7093511028',
'5066483251',
'4039998386',
'5063286066',
'7052623698',
'2047749103',
'4182656224',
'6139134092',
'5142692823',
'7805322544',
'7095768312',
'4166467711',
'4165873911',
'5199143037',
'6473090865',
'4388761705',
'2048313420',
'2503185071',
'7164470094',
'2507195150',
'2042578062',
'5142808888',
'2263444370',
'5197095165',
'6046190203',
'7058881991',
'4036805321',
'2047610725',
'4168969311',
'8194794340',
'5064261267',
'4169911007',
'5143407912',
'5879662081',
'4504450374',
'6478311561',
'6047294832',
'7275397429',
'4508482544',
'7056882289',
'7055296206',
'4064244560',
'2505195277',
'9022275622',
'2263370567',
'7802386169',
'7788655186',
'6138497350',
'8198952353',
'7092760741',
'6042393710',
'9024735010',
'7784406666',
'5145437246',
'4504298134',
'4167743755',
'5145508709',
'9023324613',
'8673330931',
'4184546936',
'7783231051',
'5193814191',
'5145012737',
'4164172718',
'7092932093',
'5148937026',
'2042028403',
'5149736101',
'7784526799',
'4168207502',
'9024844601',
'5145139247',
'5149940799',
'9054246040',
'4158885849',
'7809088090',
'4385024890',
'6138579334',
'7053410837',
'5146193355',
'8193864594',
'8678734332',
'8674564324',
'9023542392',
'5144962062',
'9023328177',
'5145030884',
'5819822766',
'7092821009',
'4502483425',
'6133626283',
'4168098207',
'6048130915',
'5147137242',
'5878234667',
'5196982703',
'4189533593',
'2504885046',
'4163880569',
'5142622153',
'5142391684',
'4164505748',
'4183685879',
'5149916454',
'8328442933',
'5145832581',
'9059616084',
'9028637185',
'9053663486',
'8199620181',
'7809487486',
'5064445400',
'8195520011',
'6474692050',
'4167212654',
'8194699288',
'2048138700',
'5878977885',
'5877430743',
'6045470991',
'6476075505',
'2894400888',
'2047877411',
'5199552869',
'6133162981',
'5196356974',
'5142610696',
'8195601019',
'6046142516',
'8197588853',
'7095363151',
'9024918282',
'4168051463',
'6472704631',
'5063948844',
'4164140585',
'5872973998',
'6047732454',
'4035050899',
'4039031838',
'2362371741',
'6479814495',
'4508984173',
'2503191744',
'4504727770',
'4034406866',
'8196792073',
'5195957343',
'7056522114',
'6043163003',
'4508037545',
'4035601546',
'4037787049',
'6044453515',
'5148298976',
'7805982017',
'4505314037',
'5144480554',
'4188063999',
'9053201042',
'7057955697',
'4163958140',
'6047800250',
'4506750968',
'9027548397',
'5148938279',
'4188022438',
'4034770052',
'7806212237',
'7806162188',
'4508814576',
'6473344000',
'5195765627',
'7802183754',
'9052645832',
'4168233303',
'5148308796',
'9054503138',
'6137152197',
'2899711581',
'5067642653',
'7054653164',
'9025678579',
'4168771442',
'4506456910',
'5195724622',
'7057272789',
'9025332441',
'4168452587',
'9056870322',
'5148041453',
'4388354497',
'6043020219',
'5199633823',
'2507846900',
'9056608562',
'4169484072',
'6049018006',
'2508511481',
'4183978207',
'2506184161',
'5064737526',
'6138035956',
'5873318294',
'4182652656',
'4188368307',
'5147993902',
'8198403454',
'4165205972',
'3154829956',
'5199159619',
'6043960171',
'9024974875',
'7054795412',
'4039689562',
'6133945520',
'5148843877',
'7809187408',
'9024394322',
'5148295806',
'7167549070',
'4185411166',
'5147031619',
'4506553650',
'9023324701',
'6473020065',
'6474924427',
'5192650335',
'7092408900',
'3154824511',
'7058055404',
'4164004659',
'4372190415',
'4039306077',
'8192901731',
'4162623618',
'4039285250',
'4165582293',
'6047605249',
'4169907788',
'2508643515',
'6047442199',
'7802152158',
'4184463532',
'3063513006',
'6477977500',
'4183823307',
'4165681905',
'4039668749',
'5148704755',
'6045379796',
'5199711103',
'7807090236',
'9417781515',
'4506921043',
'9025364283',
'6136701635',
'4168866703',
'5197966738',
'2263495770',
'4188637866',
'7808807225',
'8196924821',
'7809040001',
'6132181591',
'5142451992',
'8193756886',
'7054319368',
'9055684128',
'8195232879',
'4165584305',
'7808321404',
'7098644558',
'9024394569',
'5198268244',
'5193620761',
'9024213690',
'8678744867',
'5063333596',
'9023324704',
'4378869027',
'5142938669',
'4186370556',
'4167202417',
'7809774037',
'6472200666',
'4033489529',
'4168297835',
'3068818382',
'7789869011',
'5068743845',
'4166163749',
'4185720800',
'5197255262',
'4169897717',
'4033854583',
'4032701767',
'9802333347',
'4312910000',
'5063939533',
'3062095414',
'5196633641',
'9059667580',
'7096473502',
'8195210409',
'5193600302',
'7097781330',
'7804561062',
'9057064788',
'9023308307',
'4388879634',
'4166189359',
'9023033544',
'4038661953',
'3064773385',
'6138769666',
'7097377760',
'4168036750',
'6479244182',
'4185630168',
'6138162317',
'7027855462',
'6477387198',
'4164504940',
'6137911633',
'5062275793',
'5147435194',
'9022002476',
'5068593994',
'4166764421',
'6048029865',
'4184461054',
'6047108400',
'7807144424',
'5066430455',
'7783875070',
'6477657933',
'7809336490',
'9202367272',
'6473023909',
'9055902874',
'9053218537',
'4039926233',
'2893392557',
'4186578712',
'5197911224',
'8676688636',
'9059814891',
'5149964060',
'5194575339',
'8198551783',
'4032086328',
'6475714503',
'6135515638',
'2262685497',
'5149147775',
'2892138881',
'4372141755',
'5064540660',
'4167179860',
'5195687525',
'4184493482',
'4169947637',
'5068584245',
'9025798816',
'5197775557',
'6475395596',
'5196170152',
'6048070597',
'6479190645',
'8198186900',
'9024287513',
'9066328934',
'4188827787',
'4169049581',
'5199695244',
'5196701558',
'8197576464',
'8198502367',
'7095365626',
'5148913763',
'4168875184',
'2507931468',
'4508308001',
'5148656375',
'4169365735',
'4506763973',
'7789283588',
'9053758733',
'4506419316',
'4035597438',
'2263189910',
'6133411637',
'6132827516',
'7806217045',
'5069620383',
'6472912053',
'5879361013',
'4505440665',
'9054013344',
'5149843235',
'9055629743',
'4505899797',
'4188066576',
'4035818198',
'4165674750',
'5879747701',
'5145603015',
'5196866142',
'9053637903',
'4168929532',
'7098913471',
'5149837368',
'4032931637',
'8678748001',
'5064778672',
'5196360703',
'5874420760',
'9059283994',
'7097692511',
'7055612124',
'5146523649',
'6048081988',
'2508627881',
'6042511144',
'5149941515',
'5199990488',
'3062361460',
'5149689988',
'5063576073',
'4032521494',
'5196977844',
'4163928657',
'5182191746',
'7782403695',
'4508984715',
'5147705178',
'7096954283',
'4168333133',
'6043078383',
'9024559695',
'5146558696',
'7784782000',
'5147760077',
'5066325681',
'7803066835',
'5065333305',
'6135615696',
'2894263011',
'4188084262',
'4379995809',
'4164536007',
'2509791115',
'4185715067',
'9022981843',
'6044019342',
'4167288876',
'5877760191',
'9055216009',
'4037786972',
'5149420828',
'9024564750',
'6045253592',
'2506122117',
'6046403731',
'4037787501',
'2266360125',
'5065323409',
'8673353412',
'4162966485',
'5146046610',
'5149916516',
'7053330827',
'5198810067',
'5148812852',
'9023053456',
'5198193278',
'4182180144',
'8678415326',
'9059848716',
'4184446484',
'3439999037',
'6138664328',
'4039233755',
'7809375651',
'8194303171',
'5147937725',
'4502759287',
'7788811183',
'7808623696',
'6477863310',
'4187178948',
'5149943550',
'7788780540',
'6472998770',
'6479786511',
'3062504517',
'4037787242',
'9058980909',
'7789999718',
'7058752800',
'7053571392',
'4389257886',
'9179949961',
'7055861811',
'4037781267',
'7802176966',
'5142444843',
'7097524852',
'7094973607',
'5064558294',
'4036502646',
'8103853759',
'4188051596',
'7807537999',
'5192517303',
'5147174842',
'6047258909',
'2046323755',
'9024821562',
'4036076535',
'6048753470',
'6043653084',
'7785528984',
'4035060467',
'4502293877',
'4039214868',
'4162049452',
'4167767488',
'7094755211',
'4166768040',
'9057644884',
'7786505262',
'6478356189',
'4032528506',
'4032167292',
'4036670911',
'5878814088',
'2042550669',
'4183137946',
'5146908387',
'7808355459',
'4182181314',
'6479367469',
'9024734010',
'9024918064',
'6137975261',
'4165584054',
'9057954252',
'8196252375',
'3433702020',
'5195255081',
'6472614331',
'7808328852',
'7056223757',
'4163477126',
'7097772287',
'6472711018',
'2043443482',
'3064667409',
'4038502542',
'7097522362',
'4036671355',
'5143564721',
'2502610234',
'8199628331',
'2898870291',
'4188189845',
'5148753052',
'5145243880',
'2266360123',
'8674566600',
'9027463752',
'4185544611',
'7097868543',
'7058493512',
'5148253753',
'9028241078',
'7094582341',
'5879386927',
'4033175800',
'5144765466',
'6476411275',
'3433416356',
'5066247575',
'5148709837',
'4184205867',
'7056766024',
'6472959742',
'8199196776',
'5063951234',
'6132204056',
'5192771883',
'6479751371',
'6048255220',
'4163645410',
'5149938911',
'5066519601',
'5149431921',
'4505440097',
'9052303176',
'8195788852',
'7809914991',
'7094274382',
'6133849226',
'3212893161',
'5196411944',
'4189351155',
'4165004836',
'4169361193',
'7807355703',
'7803946906',
'9024213361',
'6133471000',
'6132792647',
'3067660456',
'4033408076',
'7803876087',
'8196976523',
'7806388582',
'4384951813',
'2892097046',
'2505079651',
'8197637640',
'4033762740',
'5148205466',
'7099865710',
'6133927350',
'2899289300',
'7807187396',
'2503632905',
'2397740088',
'5067384033',
'2047829291',
'4167762649',
'5196178144',
'6479489460',
'7805700800',
'4183823795',
'6132238476',

];
const numbersLength = numbers.length;



// path to save the excel file
// make sure the directory is available
// choose a new file each time you run the script
let filePath = './Results/test4.xlsx';

let validStores = [];
let invalidStores = [];
let allNumbers = [];

const workBook = xlsx.utils.book_new();

async function incrementLoop(i) {
    return Promise.resolve(++i);
}

const getData = async (number) => {

    await axios.get(`https://www.yellowpages.ca/search/si/1/${number}/Mississauga+ON`)
        .then(async response => {
            const html = await response.data;
            const $ = cheerio.load(html);
            let Number = new Object();
            Number.BusinessNumber = number;
            allNumbers.push(Number);
            let Store = new Object();

            if ($('.listing').length === 0 && $('.merchant__info-content').text() === '' && $('.ypalert--warning').text() === '' && $('.fs__section--feedback').find('h3').eq(0).text() === '') {
                invalid++;
                counter++;
                percentage = ((valid / counter) * 100).toFixed(2);
                if (typeof (percentage) === NaN) {
                    percentage = 0;
                }
                console.log("\x1b[31m", `#${counter}: ${number} >> Invalid - Total Valid: ${percentage}%`);

                //console.log('I am here 1');
                Store.Number = number
                Store.Type = null
                Store.Name = null
                Store.Department = null
                Store.StreetAddress = null
                Store.City = null
                Store.Province = null
                Store.PostCode = null
                Store.PrimaryPhone = $('.content__header').find('h1').find('span').eq(0).text()
                Store.SecondaryPhone = null
                Store.Website = null
                Store.Scammers = null
                Store.TeleMarkter = null
                Store.PrankCall = null
                Store.DebtCollector = null
                Store.Survey = null
                Store.NonProfit = null
                Store.Political = null
                Store.Notes = null

                invalidStores.push(Store);

                if (counter === numbersLength) {
                    console.log("\x1b[36m", `Please wait for 10 seconds...`);
                    setTimeout(() => {
                        console.log()
                        saveToFile();
                    }, 10000);
                }
            }
            else if ($('.listing').length === 0 && $('.merchant__info-content').text() === '' && $('.ypalert--warning').text() === '' && $('.fs__section--feedback').find('h3').eq(0).text() === 'User remarks') {
                //console.log('I am here 2');

                valid++;
                counter++;
                percentage = ((valid / counter) * 100).toFixed(2);
                console.log("\x1b[32m", `#${counter}: ${number} >> Valid - Total Valid: ${percentage}%`);

                let graphVal = $('noscript').text()
                graphVal = graphVal.replace(/<\/?[^>]+(>|$)/g, ".");
                graphVal = graphVal.replace(/(\r\n|\n|\r)/gm, "");
                let arr = graphVal.split(".")
                

                let Store = new Object();
                Store.Number = number
                Store.Type = null
                Store.Name = null
                Store.Department = null
                Store.StreetAddress = null
                Store.City = null
                Store.Province = null
                Store.PostCode = null
                Store.PrimaryPhone = $('.content__header').find('h1').find('span').eq(0).text()
                Store.SecondaryPhone = null
                Store.Website = null
                Store.Scammers = arr[4].trim().split(' ')[0]
                Store.TeleMarkter = arr[6].trim().split(' ')[0]
                Store.PrankCall = arr[8].trim().split(' ')[0]
                Store.DebtCollector = arr[10].trim().split(' ')[0]
                Store.Survey = arr[12].trim().split(' ')[0]
                Store.NonProfit = arr[14].trim().split(' ')[0]
                Store.Political = arr[16].trim().split(' ')[0]
                Store.Notes = null

                validStores.push(Store);

                if (counter === numbersLength) {
                    console.log("\x1b[36m", `Please wait for 10 seconds...`);
                    setTimeout(() => {
                        console.log()
                        saveToFile();
                    }, 10000);
                }

            }

            else if ($('.listing').length > 0 && $('.merchant__info-content').text() === '' && $('.ypalert--warning').text() === '') {
                valid++;
                counter++;
                percentage = ((valid / counter) * 100).toFixed(2);
                console.log("\x1b[32m", `#${counter}: ${number} >> Valid - Total Valid: ${percentage}%`);

                let listing = $('.listing')
                for (let i = 0; i < listing.length; i++) {
                    let Store = new Object()
                    Store.Number = number
                    Store.Type = 'Business'
                    Store.Name = listing.eq(i).find('.jsListingName').text()
                    if (listing.eq(i).find('.listing__address--full').find('span').length === 4) {
                        Store.StreetAddress = (listing.eq(i).find('.listing__address--full').find('span').eq(0).text() !== '') ? listing.eq(i).find('.listing__address--full').find('span').eq(0).text() : null
                        Store.City = (listing.eq(i).find('.listing__address--full').find('span').eq(1).text() !== '') ? listing.eq(i).find('.listing__address--full').find('span').eq(1).text() : null
                        Store.Province = (listing.eq(i).find('.listing__address--full').find('span').eq(2).text() !== '') ? listing.eq(i).find('.listing__address--full').find('span').eq(2).text() : null
                        Store.PostCode = (listing.eq(i).find('.listing__address--full').find('span').eq(3).text() !== '') ? listing.eq(i).find('.listing__address--full').find('span').eq(3).text() : null
                    }
                    else {
                        Store.StreetAddress = null
                        Store.City = null
                        Store.Province = null
                        Store.PostCode = null
                    }
                    Store.Description = listing.eq(i).find('.listing__captext').text().replace(/(\r\n|\n|\r)/gm, "")
                    Store.Heading = listing.eq(i).find('.jsPreventBubbleMobile').text()
                    if (listing.eq(i).find('.mlr__submenu__item').length > 1) {
                        Store.PrimaryPhone = listing.eq(i).find('.mlr__submenu__item').eq(0).text()
                        Store.SecondaryPhone = listing.eq(i).find('.mlr__submenu__item').eq(1).text()
                    }
                    else {
                        Store.PrimaryPhone = listing.eq(i).find('.mlr__submenu__item').text()
                        Store.SecondaryPhone = null
                    }
                    let Website = listing.eq(i).find('.mlr__item--website').find('a').attr('href')
                    if (Website === undefined) {
                        Store.Website = null
                    }
                    else {
                        let cleanedWebsite = decodeURIComponent(Website)
                        Store.Website = cleanedWebsite.split('=')[1]
                    }
                    Store.Scammers = null
                    Store.TeleMarkter = null
                    Store.PrankCall = null
                    Store.DebtCollector = null
                    Store.Survey = null
                    Store.NonProfit = null
                    Store.Political = null
                    Store.Notes = null
                    Store.Department = null
                    validStores.push(Store)
                }

                if (counter === numbersLength) {
                    console.log("\x1b[36m", `Please wait for 10 seconds...`);
                    setTimeout(() => {
                        console.log()
                        saveToFile();
                    }, 10000);
                }

            }
            else if ($('.listing').length === 0 && $('.merchant__info-content').text() !== '' || $('.ypalert--warning').text() === 'Are you the owner of this business?') {
                valid++;
                counter++;
                percentage = ((valid / counter) * 100).toFixed(2);
                console.log("\x1b[32m", `#${counter}: ${number} >> Valid - Total Valid: ${percentage}%`);

                let Store = new Object()

                let General = $('.merchant__info-content')

                let commonField = General.find('.merchant__name')

                let commonNameTitle = commonField.find('h1').find('span')
                let commonAddress = commonField.find('.merchant__item').find('span')

                let commonPhoneWebsite = General.find('.middle_section').find('.merchant__mlr').find('div').find('ul')
                Store.Number = number
                Store.Type = 'Business'
                Store.Name = commonNameTitle.eq(1).text()
                Store.Department = (commonNameTitle.eq(2).text() !== '') ? commonNameTitle.eq(2).text() : null

                Store.StreetAddress = commonAddress.eq(0).text()
                Store.City = commonAddress.eq(1).text()
                Store.Province = commonAddress.eq(2).text()
                Store.PostCode = commonAddress.eq(3).text()

                Store.PrimaryPhone = commonPhoneWebsite.find('.mlr__item--phone').find('ul').find('li').eq(0).find('span').eq(0).text()
                Store.SecondaryPhone = null
                let Website = commonPhoneWebsite.find('.mlr__item--website').find('a').attr('href')
                if (Website === undefined) {
                    Store.Website = null
                }
                else {
                    let cleanedWebsite = decodeURIComponent(Website)
                    Store.Website = cleanedWebsite.split('=')[1]
                }
                Store.Scammers = null
                Store.TeleMarkter = null
                Store.PrankCall = null
                Store.DebtCollector = null
                Store.Survey = null
                Store.NonProfit = null
                Store.Political = null
                Store.Notes = null

                validStores.push(Store)


                if (counter === numbersLength) {
                    console.log("\x1b[36m", `Please wait for 10 seconds...`);
                    setTimeout(() => {
                        console.log()
                        saveToFile();
                    }, 10000);
                }
            }

            else if ($('.listing').length === 0 && $('.person-search__table').length > 0) {
                

                valid++;
                counter++;
                percentage = ((valid / counter) * 100).toFixed(2);
                console.log("\x1b[32m", `#${counter}: ${number} >> Valid - Total Valid: ${percentage}%`);

                

                let Store = new Object();
                Store.Number = number
                Store.Type = 'Person'
                Store.Name = $('.person-search__table--name').eq(0).text().trim();
                Store.Department = null
                Store.StreetAddress = $('.person-search__table--street').eq(0).text().trim();
                Store.City = $('.person-search__table--city').eq(0).text().trim();
                Store.Province = $('.person-search__table--province').eq(0).text().trim();
                Store.PostCode = $('.person-search__table--postalCode').eq(0).text().trim();
                Store.PrimaryPhone = $('.person-search__table--phoneNumber').eq(0).text().trim();
                Store.SecondaryPhone = null
                Store.Website = null
                Store.Scammers = null
                Store.TeleMarkter = null
                Store.PrankCall = null
                Store.DebtCollector = null
                Store.Survey = null
                Store.NonProfit = null
                Store.Political = null
                Store.Notes = $('.ypalert--warning').text().split('.')[0]

                validStores.push(Store);

                if (counter === numbersLength) {
                    console.log("\x1b[36m", `Please wait for 10 seconds...`);
                    setTimeout(() => {
                        console.log()
                        saveToFile();
                    }, 10000);
                }

            }

            else {
                invalid++;
                counter++;
                percentage = ((valid / counter) * 100).toFixed(2);
                if (typeof (percentage) === NaN) {
                    percentage = 0;
                }
                console.log("\x1b[31m", `#${counter}: ${number} >> Invalid - Total Valid: ${percentage}%`);
                let Store = new Object()

                Store.Number = number
                Store.Type = null
                Store.Name = null
                Store.Department = null
                Store.StreetAddress = null
                Store.City = null
                Store.Province = null
                Store.PostCode = null
                Store.Description = null
                Store.Heading = null
                Store.PrimaryPhone = $('.content__header').find('h1').find('span').eq(0).text()
                Store.SecondaryPhone = null
                Store.Website = null
                Store.Scammers = null
                Store.TeleMarkter = null
                Store.PrankCall = null
                Store.DebtCollector = null
                Store.Survey = null
                Store.NonProfit = null
                Store.Political = null
                Store.Notes = $('.ypalert--warning').text().split('.')[0]

                invalidStores.push(Store);

                if (counter === numbersLength) {
                    console.log("\x1b[36m", `Please wait for 10 seconds...`);
                    setTimeout(() => {
                        console.log()
                        saveToFile();
                    }, 10000);
                }

            }


        })
        .catch(error => {
            getData(number);
        });

};

/**********************************************************************/

const saveToFile = () => {
    console.log("\x1b[36m", 'Saving to the file...');

    let allWorkSheet = xlsx.utils.json_to_sheet(allNumbers);
    allWorkSheet["!cols"] = [{ width: 35 }];
    xlsx.utils.book_append_sheet(workBook, allWorkSheet, 'All Numbers');

    let validWorkSheet = xlsx.utils.json_to_sheet(validStores);
    validWorkSheet["!cols"] = [{ width: 35 }];
    xlsx.utils.book_append_sheet(workBook, validWorkSheet, 'Valid Numbers');

    let invalidWorkSheet = xlsx.utils.json_to_sheet(invalidStores);
    invalidWorkSheet["!cols"] = [{ width: 35 }];
    xlsx.utils.book_append_sheet(workBook, invalidWorkSheet, 'Invalid Numbers');

    xlsx.writeFile(workBook, filePath);
    console.log("\x1b[36m", 'Successfully saved. BYE!');
}

/* Faster version, but not resumable and can manage up to 1500 elements each time */
const app1 = _ => {
    console.log("\x1b[36m", 'Please give the script a few seconds to warm up... ;)');
    numbers.forEach(number => {
        getData(number);
    });
}

/* Slower version, but it is resumable and can accept an array with more elements as an input*/
const app2 = async _ => {
    console.log("\x1b[36m", 'Please give the script a few seconds to warm up... ;)');
    for (number of numbers) {
        await getData(number);
    }
}


process.on('SIGINT', function () {
    console.log("\x1b[33m", "Caught interrupt signal. Saving to the file...");
    saveToFile();
    process.exit();
});

app2();